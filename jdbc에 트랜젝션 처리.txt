* JDBC에서 트랜잭션 처리 
- 두 개 이상의 쿼리를 모두 성공적으로 실행해야 데이터가 정상적으로 처리되는 경우 
DBMS는 트랜잭션(transaction)을 이용해서 두 개 이상의 쿼리를 마치 한 개의 쿼리처럼 
처리할 수 있게 해줍니다. 
- 트랜잭션은 시작과 종료를 갖고 있으며, 트랜잭션이 시작되면 이후로 실행되는 쿼리 결과는 
DBMS에 곧바로 반영되지 않고 임시로 보관됩니다. 
- 이후 트랜잭션을 커밋(commit)하면 임시 보관한 쿼리 결과를 실제 데이터베이스에 반영합니다. 
- 트랜잭션은 커밋하기 전에 에러가 발생하면 임시로 보관한 모든 쿼리 결과를 실제 데이터에 
반영하지 않고 롤백(rollback)합니다.

* 연결 풀(Connection Pool) 
- 연결 풀은 데이터베이스 메모리 내에 있는 데이터베이스 커넥션들로 구성된 하나의 캐시입니다. 
- 데이터베이스 연결 풀은 데이터에 대한 요청이 발생하면 재사용되는 것으로, 
데이터베이스의 수행 능력을 향상시키기 위해 사용됩니다. 
- 연결 풀에서 하나의 연결이 생성되어 풀에 배치되면 새로운 연결이 만들어지지 않도록 재사용하지만, 
만약 모든 연결이 사용 중에 있 으면 새로운 연결이 만들어져 풀에 추가됩니다. 
- 연결 풀을 통해 사용자는 데이터베이스 연결을 위해 기다리는 시간을 축소시켜줍니다.
- 커넥션 풀 설정은 Eclipse-> Servers폴더에 -> context.xml을 수정합니다. 

<Resource    auth="Container"    driverClassName = "com.mysql.jdbc.Driver"    url = "jdbc:mysql://localhost:3306/practice"    username = "jsp"    password = "jsp"    name = "jdbc/mysql"    type = "javax.sql.DataSource"    maxActive = "300"    maxWait = "1000"      />